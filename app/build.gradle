plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.appdistribution'
}

//def keystorePropertiesFile = rootProject.file("app/keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"
    defaultConfig {
        applicationId "br.espartano.marvelheroescatalog"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 2
        versionName "1.0"
        testInstrumentationRunner "br.espartano.marvelheroescatalog.runners.TestAppJUnitRunner"
    }

    signingConfigs {
       /*
       release {
            keyAlias = keystoreProperties["keyAlias"]
            keyPassword = keystoreProperties["keyPassword"]
            storeFile = file(keystoreProperties["storeFile"])
            storePassword = keystoreProperties["storePassword"]
        }
        */
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            /*
            firebaseAppDistribution {
                appId="1:721095657405:android:20527410b5b27b9a2bf4d4"
                releaseNotesFile = "app/releasenotes.txt"
                groups = "espartanos"
                serviceCredentialsFile = "app/service-account-firebasedist.json"
            }
            */
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$livedata_version")
    implementation("androidx.fragment:fragment-ktx:1.4.0")

    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "com.android.support:appcompat-v7:$appcompat_version"
    implementation "com.android.support:recyclerview-v7:$appcompat_version"
    implementation "com.android.support.constraint:constraint-layout:$constraintlayout_version"

    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.paging:runtime:1.0.1"
    implementation "android.arch.paging:rxjava2:1.0.1"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.test.ext:junit:1.1.3'

    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // Make Hilt generate code in the androidTest folder
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

}
